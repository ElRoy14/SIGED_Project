<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestión de Evaluaciones</title>
    <!-- CSS de Bootstrap -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap4.min.css">
    <style>
        .success-message {
            color: green;
            font-weight: bold;
        }

        .error-message {
            color: red;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="container mt-4">
        <h1>Listado de Evaluaciones de Desempeño</h1>
  
        <!-- Botón para abrir el modal de registro -->
        <button type="button" class="btn btn-primary mb-3" data-toggle="modal" data-target="#registerModal">
            Agregar Evaluación
        </button>

        <!-- Modal de registro de evaluaciones -->
        <div class="modal fade" id="registerModal" tabindex="-1" role="dialog" aria-labelledby="registerModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="registerModalLabel">Agregar Evaluación de Desempeño</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <!-- Formulario de registro de evaluaciones dentro del modal -->
                        <form id="performanceForm">
                            <div class="form-group">
                                <label for="evaluatorId">Evaluador:</label>
                                <select id="evaluatorId" name="evaluatorId" class="form-control">
                                    <option value="">Seleccione un evaluador</option>
                                    @foreach (var user in ViewBag.evaluatorsService)
                                    {
                                        <option value="@user.EvaluatorId">@user.UserName</option>
                                    }
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="goalId">Objetivo:</label>
                                <select id="goalId" name="goalId" class="form-control">
                                    <option value="">Seleccione un objetivo</option>
                                    @foreach (var goal in ViewBag.Goals)
                                    {
                                        <option value="@goal.GoalId">@goal.Goal1</option>
                                    }
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="userId">Usuario Evaluado:</label>
                                <select id="userId" name="userId" class="form-control">
                                    <option value="">Seleccione un usuario</option>
                                    @foreach (var user in ViewBag.Users)
                                    {
                                        <option value="@user.UserId">@user.FullName</option>
                                    }
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="rating">Calificación:</label>
                                <input type="text" id="rating" name="rating" class="form-control" />
                            </div>
                            <button type="submit" class="btn btn-primary">Agregar</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Tabla de evaluaciones de desempeño -->
        <div id="performanceList">
            <table id="performanceTable" class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th>Evaluador</th>
                        <th>Objetivo</th>
                        <th>Valor del Objetivo</th>
                        <th>Usuario Evaluado</th>
                        <th>Calificación</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Las filas de evaluaciones se insertarán dinámicamente aquí -->
                </tbody>
            </table>
        </div>

        <!-- Modal de Edición -->
        <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editModalLabel">Editar Evaluación</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form id="editPerformanceForm">
                            <input type="hidden" id="editPerformanceId">
                            <div class="form-group">
                                <label for="editEvaluatorId">Evaluador:</label>
                                <input type="text" class="form-control" id="editEvaluatorId" required>
                            </div>
                            <div class="form-group">
                                <label for="editGoalId">Objetivo:</label>
                                <input type="text" class="form-control" id="editGoalId" required>
                            </div>
                            <div class="form-group">
                                <label for="editUserId">Usuario:</label>
                                <input type="text" class="form-control" id="editUserId" required>
                            </div>
                            <div class="form-group">
                                <label for="editRating">Calificación:</label>
                                <input type="number" class="form-control" id="editRating" required>
                            </div>
                            <button type="submit" class="btn btn-primary">Guardar Cambios</button>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal de Error -->
<div class="modal fade" id="errorModal" tabindex="-1" role="dialog" aria-labelledby="errorModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div clas        s="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="error        ModalLabel">Error</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                </button>
                    </div>
            <div c        lass="modal-body">
                        Mensaje de error
            </div>
        </div>
    </div>
</div>
        <!-- Modal de Éxito -->
        <div class="modal fade" id="successModal" tabindex="-1" role="dialog" aria-labelledby="successModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="successModalLabel">Éxito</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        Mensaje de éxito
                    </div>
                </div>
            </div>
        </div>


    </div>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    ection Scripts {
    <script src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.3/js/dataTables.bootstrap4.min.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.3/css/dataTables.bootstrap4.min.css">

    <script>
        $(document).ready(function () {
            // Función para cargar evaluaciones de desempeño vía AJAX
            function loadPerformances() {
                $.ajax({
                    url: '/PerformanceEvaluation/GetAllPerformance',
                    type: 'GET',
                    success: function (response) {
                        console.log('Respuesta de cargar evaluaciones:', response);
                        if (response.status) {
                            var performances = response.value;
                            var performanceListHtml = '';
                            performances.forEach(function (performance) {
                                performanceListHtml += `
                                            <tr>
                                                <td>${performance.evaluatorName}</td>
                                                <td>${performance.goalName}</td>
                                                <td>${performance.goalValueData}</td>
                                                <td>${performance.userName}</td>
                                                <td>${performance.rating}</td>
                                                <td>
                                                    <button class="btn btn-info btn-sm" onclick="editPerformance(${performance.performanceEvaluationId})">Editar</button>
                                                    <button class="btn btn-danger btn-sm ml-2" onclick="deletePerformance(${performance.performanceEvaluationId})">Eliminar</button>
                                                </td>
                                            </tr>
                                        `;
                            });
                            $('#performanceTable tbody').html(performanceListHtml); // Insertar filas en la tabla

                            // Inicializar DataTable
                            $('#performanceTable').DataTable({
                                "paging": true,
                                "lengthChange": false,
                                "searching": true,
                                "ordering": true,
                                "info": true,
                                "autoWidth": false,
                                "responsive": true,
                                "language": {
                                    "paginate": {
                                        "first": "Primero",
                                        "last": "Último",
                                        "next": "Siguiente",
                                        "previous": "Anterior"
                                    },
                                    "search": "Buscar:",
                                    "info": "Mostrando _START_ a _END_ de _TOTAL_ evaluaciones",
                                    "infoEmpty": "Mostrando 0 a 0 de 0 evaluaciones",
                                    "infoFiltered": "(filtrado de _MAX_ evaluaciones en total)",
                                    "zeroRecords": "No se encontraron resultados"
                                }
                            });
                        } else {
                            console.log('Error: ' + response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log('Error: ' + xhr.responseText);
                    }
                });
            }

            // Cargar evaluaciones al cargar la página
            loadPerformances();

            // Manejar el envío del formulario de registro de evaluaciones desde el modal
            $('#performanceForm').submit(function (event) {
                event.preventDefault(); // Evitar el comportamiento predeterminado del formulario

                var formData = {
                    evaluatorId: $('#evaluatorId').val(),
                    goalId: $('#goalId').val(),
                    userId: $('#userId').val(),
                    rating: $('#rating').val()
                };

                $.ajax({
                    url: '/PerformanceEvaluation/Register',
                    type: 'POST',
                    data: JSON.stringify(formData),
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    success: function (response) {
                        console.log('Respuesta de agregar evaluación:', response);
                        if (response.status) {
                            $('#registerModal').modal('hide'); // Cerrar el modal
                            $('#performanceForm')[0].reset(); // Limpiar el formulario
                            loadPerformances(); // Volver a cargar las evaluaciones
                            showMessage('success', 'Evaluación agregada con éxito');
                        } else {
                            showMessage('error', 'Error al agregar evaluación: ' + response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log('Error: ' + xhr.responseText);
                        showMessage('error', 'Error en la solicitud: ' + xhr.responseText);
                    }
                });
            });

            // Manejar el envío del formulario de edición desde el modal
            $('#editPerformanceForm').submit(function (event) {
                event.preventDefault(); // Evitar el comportamiento predeterminado del formulario

                var formData = {
                    performanceEvaluationId: $('#editPerformanceId').val(),
                    evaluatorId: $('#editEvaluatorId').val(),
                    goalId: $('#editGoalId').val(),
                    userId: $('#editUserId').val(),
                    rating: $('#editRating').val()
                };

                $.ajax({
                    url: '/PerformanceEvaluation/EditPerformance',
                    type: 'PUT',
                    data: JSON.stringify(formData),
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    success: function (response) {
                        console.log('Respuesta de editar evaluación:', response);
                        if (response.status) {
                            $('#editModal').modal('hide'); // Cerrar el modal
                            loadPerformances(); // Volver a cargar las evaluaciones
                            showMessage('success', 'Evaluación editada con éxito');
                        } else {
                            showMessage('error', 'Error al editar evaluación: ' + response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log('Error: ' + xhr.responseText);
                        showMessage('error', 'Error en la solicitud: ' + xhr.responseText);
                    }
                });
            });

            function showMessage(type, message) {
                var modalId = type === 'success' ? '#successModal' : '#errorModal';
                $(modalId + ' .modal-body').html(message);
                $(modalId).modal('show');
                setTimeout(function () {
                    $(modalId).modal('hide');
                }, 3000);
            }
         

            // Función para manejar la edición de evaluaciones
            window.editPerformance = function (id) {
                $.ajax({
                    url: '/PerformanceEvaluation/GetPerformanceById?id=' + id,
                    type: 'GET',
                    success: function (response) {
                        console.log('Respuesta de obtener evaluación:', response);
                        if (response.status) {
                            var performance = response.value;
                            $('#editPerformanceId').val(performance.performanceEvaluationId);
                            $('#editEvaluatorId').val(performance.evaluatorId);
                            $('#editGoalId').val(performance.goalId);
                            $('#editUserId').val(performance.userId);
                            $('#editRating').val(performance.rating);
                            $('#editModal').modal('show');
                        } else {
                            showMessage('error', 'Error al obtener evaluación: ' + response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log('Error: ' + xhr.responseText);
                        showMessage('error', 'Error en la solicitud: ' + xhr.responseText);
                    }
                });
            };

            // Función para manejar la eliminación de evaluaciones
            window.deletePerformance = function (id) {
                if (confirm('¿Está seguro de que desea eliminar esta evaluación?')) {
                    $.ajax({
                        url: '/PerformanceEvaluation/DeletePerformance?id=' + id,
                        type: 'DELETE',
                        success: function (response) {
                            console.log('Respuesta de eliminar evaluación:', response);
                            if (response.status) {
                                loadPerformances(); // Volver a cargar las evaluaciones
                                showMessage('success', 'Evaluación eliminada con éxito');
                            } else {
                                showMessage('error', 'Error al eliminar evaluación: ' + response.message);
                            }
                        },
                        error: function (xhr, status, error) {
                            console.log('Error: ' + xhr.responseText);
                            showMessage('error', 'Error en la solicitud: ' + xhr.responseText);
                        }
                    });
                }
            };
        });
    </script>
</body>

</html>

<style>

    body {
        background-color: #e8f4fc;
        color: #333;
        font-family: Arial, sans-serif;
    }

    h1, h2 {
        color: #004080;
    }

    .container {
        background-color: #ffffff;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        padding: 20px;
        margin-top: 20px;
    }

    .table {
        background-color: #f9fbfd;
    }

        .table thead th {
            background-color: #accff3; /* Soft blue tone */
            color: #004080;
        }

        .table tbody tr:hover {
            background-color: #d0d0d0; /* Gray color on hover */
        }

    .form-control {
        border: 1px solid #b0cfe0;
        border-radius: 4px;
    }

        .form-control:focus {
            border-color: #66afe9;
            box-shadow: 0 0 8px rgba(102, 175, 233, 0.6);
        }
</style>