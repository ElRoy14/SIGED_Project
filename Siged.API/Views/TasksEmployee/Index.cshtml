@model Siged.Domain.TasksEmployee;

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<html lang="es">
    
    <body>
        <main>

        <h1>Asignar Tareas</h1>

        <!-- Campo de búsqueda -->
        <input type="text" id="searchInput" class="form-control mb-3" placeholder="Buscar en la tabla...">

        <!-- Botón Agregar Tarea -->
        <button class="btn btn-primary mb-3" id="btnAddTask">Agregar Tarea</button>

            <div id="taskList">
                <!-- Aquí se cargará dinámicamente la tabla de tareas -->
                <table class="table table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Nombre Tarea</th>
                            <th>Fecha Inicio</th>
                            <th>Fecha Finalización</th>
                            <th>Empleado</th>
                            <th>Estatus</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Aquí se insertarán dinámicamente las filas de las tareas -->
                    </tbody>
                </table>
            </div>

        <!-- Modal para Asignar Tarea-->
        <div class="modal fade" id="createTaskModal" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="createTaskModalLabel">Crear Nueva Tarea</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form id="createTaskForm">
                            @if (User.Identity.IsAuthenticated)
                            {
                                <input type="hidden" asp-for="User.FullName" value="@User.Identity.Name" />
                            }
                            <div class="form-group">
                                <label for="nameTask" class="control-label">Nombre de la Tarea</label>
                                <input id="nameTask" class="form-control" />
                            </div>

                            <div class="form-group">
                                <label for="dueDate" class="control-label">Fecha de Finalización</label>
                                <input type="date" id="dueDate" class="form-control" />
                            </div>

                            <div class="form-group">
                                <label for="taskStatusDescription" class="control-label">Estatus de la Tarea</label>
                                <input id="taskStatusDescription" value="Pendiente" class="form-control" readonly />
                            </div>

                            <div class="form-group">
                                <label for="userId">Asignar Tarea a Empleado</label>
                                <select class="form-control" id="userId" name="userId" required>
                                    <option value="">Seleccione un Empleado</option>
                                    @foreach (var user in ViewBag.Users)
                                    {
                                        <option value="@user.UserId">@user.FullName</option>
                                    }
                                </select>
                            </div>

                            <div class="modal-footer">
                                <input type="button" value="Guardar" id="btnSaveTask" class="btn btn-success" />
                                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal para Editar Tarea-->
        <div class="modal fade" id="editTaskModal" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editTaskModalLabel">Editar Tarea</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form id="editTaskForm" method="post">
                            <input type="hidden" id="editTaskId" name="editTaskId" />
                            <div class="form-group">
                                <label for="editNameTask" class="control-label">Nombre de la Tarea</label>
                                <input id="editNameTask" name="editNameTask" class="form-control" />
                            </div>
                            <div class="form-group">
                                <label for="editDueDate" class="control-label">Fecha de Finalización</label>
                                <input type="date" id="editDueDate" name="editDueDate" class="form-control" />
                            </div>
                            <div class="form-group">
                                <label for="editUserId">Asignar Tarea a Empleado</label>
                                <select class="form-control" id="editUserId" name="editUserId" required>
                                    <option value="">Seleccione un Empleado</option>
                                    @foreach (var user in ViewBag.Users)
                                    {
                                        <option value="@user.UserId">@user.FullName</option>
                                    }
                                </select>
                            </div>
                            <div class="modal-footer">
                                <input type="button" value="Modificar" id="btnModifyTask" class="btn btn-success" />
                                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>


        </main>

    <style>
        body {
            background-color: #e8f4fc;
            color: #333;
            font-family: Arial, sans-serif;
        }

        h1, h2 {
            color: #004080;
        }

        .container {
            background-color: #ffffff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            padding: 20px;
            margin-top: 20px;
        }

        .table {
            background-color: #f9fbfd;
        }

            .table thead th {
                background-color: #accff3; /* Soft blue tone */
                color: #004080;
            }

            .table tbody tr:hover {
                background-color: #d0d0d0; /* Gray color on hover */
            }

        .form-control {
            border: 1px solid #b0cfe0;
            border-radius: 4px;
        }

            .form-control:focus {
                border-color: #66afe9;
                box-shadow: 0 0 8px rgba(102, 175, 233, 0.6);
            }
    </style>

        <script src="~/vendor/jquery/jquery.min.js"></script>
        <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
        <script>

        document.addEventListener("DOMContentLoaded", function (event) {
            loadTasks();
        });

        // Función para cargar tareas mediante AJAX
        function loadTasks() {
            $.ajax({
                url: '/TasksEmployee/GetAllTask',
                type: 'GET',
                success: function (response) {
                    console.log(response.value[0].nameTask) // Log the response to check for errors
                    console.log(response)
                    if (response.status) {
                        var tasks = response.value;
                        var taskListHtml = '';
                        tasks.forEach(function (task) {
                            taskListHtml += '<tr>' +
                                '<td>' + task.taskId + '</td>' +
                                '<td>' + task.nameTask + '</td>' +
                                '<td>' + task.startDate + '</td>' +
                                '<td>' + task.dueDate + '</td>' +
                                '<td>' + task.userDescription + '</td>' +
                                '<td>' + task.taskStatusDescription + '</td>' +
                                '<td>' +
                                '<button class="btn btn-sm btn-warning btn-custom btn-edit" data-userId="' + task.userId + '">Editar</button>' +
                                '<button class="btn btn-sm btn-danger btn-custom btn-delete" data-taskId="' + task.taskId + '">Eliminar</button>' +
                                '</td>' 
                                '</tr>';
                        });
                        $('#taskList tbody').html(taskListHtml); // Inserta las filas de usuarios en la tabla
                    } else {
                        $('#taskList').html('<div class="alert alert-danger">' + response.message + '</div>');
                    }
                },
                error: function (xhr, status, error) {
                    console.error(xhr.responseText);
                }
            });
        }

        //Evento para registrar tarea
        $('#btnSaveTask').click(function () {
            var task = {
                nameTask: $('#nameTask').val(),
                dueDate: $('#dueDate').val(),
                userId: $('#userId').val(),
            };
            Register(task);
        });

        function Register(task)
        {
            $.ajax({
                url: '/TasksEmployee/Register',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(task),
                success: function (response) {
                    console.log(response); // Log the response to check for errors
                    if (response.status) {
                        // Mostrar mensaje de éxito
                        alert('Tarea registrada con éxito.', true);
                        // Limpiar campos del formulario
                        $('#createTaskForm')[0].reset();
                        $('#createTaskModal').modal('hide'); // Ocultar el modal después de registrar
                        // Actualizar la lista de tareas después de registra
                        loadTasks();
                    } else {
                        alert('Error al registrar tarea: ' + response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error(xhr.responseText);
                    alert('Error al registrar tarea.', false);
                }
            });
        }

        //Evento para modificar tarea
        $('#btnModifyTask').click(function () {
            var task = {
                taskId: $('#editTaskId').val(),
                nameTask: $('#editNameTask').val(),
                dueDate: $('#editDueDate').val(),
                userId: $('#editUserId').val(),
            };
            console.log('Datos a enviar:', task);
            Update(task);
        });

        function Update(task) {
            console.log(task);
            $.ajax({
                url: '/TasksEmployee/EditTask',
                type: 'PUT',
                contentType: 'application/json',
                data: JSON.stringify(task),
                success: function (response) {
                    console.log(response); // Log the response to check for errors
                    if (response.status) {
                        alert('Tarea modificada con éxito.', true);
                        $('#editTaskForm')[0].reset();
                        loadTasks();
                        $('#editTaskModal').modal('hide');
                    } else {
                        alert('Error al modificar la tarea: ' + response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error(xhr.responseText);
                    alert('Error al modificar la tarea.', false);
                }
            });
        }

        // Función para eliminar usuario
        function deleteTask(taskId) {
            if (confirm('¿Estás seguro de eliminar este tarea?')) {
                $.ajax({
                    url: '/TasksEmployee/DeleteTask?id=' + taskId,
                    type: 'DELETE',
                    success: function (response) {
                        if (response.status) {
                            alert('Tarea eliminado exitosamente.', true);
                            loadTasks(); // Recargar lista de tareas después de eliminar
                        } else {
                            alert('Error al eliminar tarea: ' + response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error(xhr.responseText);
                        alert('Error al eliminar tarea.', false);
                    }
                });
            }
        }

        // Función para editar tarea
        function getPendingTasksByUser(userId) {
            $.ajax({
                url: '/TasksEmployee/GetPendingTaskByUser?userId=' + userId,
                type: 'GET',
                success: function (response) {
                    if (response.status) {
                        var task = response.value[0]; // Suponemos que solo hay una tarea pendiente por usuario
                        $('#editTaskId').val(task.taskId);
                        $('#editNameTask').val(task.nameTask);
                        $('#editDueDate').val(task.dueDate);
                        $('#editUserId').val(task.userId);
                        $('#editTaskModal').modal('show');
                    } else {
                        alert('Error: ' + response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error(xhr.responseText);
                }
            });
        }

        // Al hacer clic en el botón de eliminar usuario
        $('#taskList').on('click', '.btn-delete', function () {
            var taskId = $(this).data('taskid');
            // Confirmar antes de eliminar
            console.log(taskId);
            if (confirm('¿Estás seguro de que deseas eliminar esta tarea?')) {
                deleteTask(taskId);
            }
        });

        // Al hacer clic en el botón de editar tarea
        $('#taskList').on('click', '.btn-edit', function () {
            var fecha = new Date();
            var anio = fecha.getFullYear();
            var dia = fecha.getDate();
            var _mes = fecha.getMonth();//viene con valores de 0 al 11
            _mes = _mes + 1;//ahora lo tienes de 1 al 12
            if (_mes < 10)//ahora le agregas un 0 para el formato date
            { var mes = "0" + _mes; }
            else { var mes = _mes.toString; }
            document.getElementById("editDueDate").min = anio + '-' + mes + '-' + dia;
            var userId = $(this).data('userid');
            getPendingTasksByUser(userId);
        });

        //<!--Evento para abrir modal para registrar una tarea-->
        $("#btnAddTask").on('click', function () {
            var fecha = new Date();
            var anio = fecha.getFullYear();
            var dia = fecha.getDate();
            var _mes = fecha.getMonth();//viene con valores de 0 al 11
            _mes = _mes + 1;//ahora lo tienes de 1 al 12
            if (_mes < 10)//ahora le agregas un 0 para el formato date
            { var mes = "0" + _mes; }
            else { var mes = _mes.toString; }
            document.getElementById("dueDate").min = anio + '-' + mes + '-' + dia;
            $("#createTaskModal").modal('show')
        });

        // Evento para buscar en la tabla
        $('#searchInput').on('keyup', function () {
            var value = $(this).val().toLowerCase();
            $('#taskList tbody tr').filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
            });
        });

        // Cerrar el modal de edición
        $('#closeEditModal').on('click', function () {
            $('#editTaskModal').modal('hide');
        });

        $('#closeCreateModal').on('click', function () {
            $('#createTaskModal').modal('hide');
        });

        </script>

    </body>
</html>