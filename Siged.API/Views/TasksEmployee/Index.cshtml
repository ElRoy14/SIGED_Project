@model Siged.Domain.TasksEmployee;

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<html lang="es">
    
    <body>
        <main>

        <h1>Prueba asignar tareas</h1>

        <!-- Campo de búsqueda -->
        <input type="text" id="searchInput" class="form-control mb-3" placeholder="Buscar en la tabla...">

        <!-- Botón Agregar Tarea -->
        <button class="btn btn-primary mb-3" data-toggle="modal" data-target="#createTaskModal">Agregar Tarea</button>

            <div id="taskList">
                <!-- Aquí se cargará dinámicamente la tabla de tareas -->
                <table class="table table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Nombre Tarea</th>
                            <th>Fecha Inicio</th>
                            <th>Fecha Finalización</th>
                            <th>Empleado</th>
                            <th>Estatus</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Aquí se insertarán dinámicamente las filas de las tareas -->
                    </tbody>
                </table>
            </div>

            <div class="modal-body" id="createTaskModal" tabindex="-1"> <!-- Modal para Editar Tarea-->
                <form asp-action="Create" method="post">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <input type="hidden" asp-for="User.FullName" value="@User.Identity.Name" />
                    }
                    <div class="col-md-3">
                        <label for="NameTask" class="control-label">Nombre de la Tarea</label>
                        <input asp-for="NameTask" class="form-control" />
                        <span asp-validation-for="NameTask" class="text-danger"></span>
                    </div>

                <div class="col-md-3">
                    <label for="StartDate" class="control-label">Fecha de Inicio</label>
                    <input asp-for="StartDate" id="taskDate" class="form-control" />
                    <span asp-validation-for="StartDate" class="text-danger"></span>
                </div>

                <div class="col-md-3">
                    <label for="DueDate" class="control-label">Fecha de Finalización</label>
                    <input asp-for="DueDate" class="form-control" />
                    <span asp-validation-for="DueDate" class="text-danger"></span>
                </div>

                <div class="col-md-3">
                    <label for="TaskStatus" class="control-label">Estatus de la Tarea</label>
                    <select class="form-control" name="taskStatusId" required>
                        <option>Select Status</option>
                        @foreach (var status in ViewBag.Status)
                        {
                            <option value="@status.TaskStatusId">@status.TaskStatus</option>
                        }
                    </select>
                </div>
                <div class="modal-footer">
                    <input type="submit" value="Guardar" class="btn btn-success" />
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Cancelar</button>
                </div>
                </form>
            </div>

        <div class="modal-body" id="editTaskModal" tabindex="-1"> <!-- Modal para Editar Tarea-->
            <form asp-action="Edit" method="post">
                <input asp-for="TaskId" type="hidden" id="editTaskId"/>
                @if (User.Identity.IsAuthenticated)
                {
                    <input type="hidden" asp-for="User.FullName" value="@User.Identity.Name" />
                }
                <div class="col-md-3">
                    <label for="NameTask" class="control-label">Nombre de la Tarea</label>
                    <input asp-for="NameTask" id="editNameTask" class="form-control" />
                    <span asp-validation-for="NameTask" class="text-danger"></span>
                </div>

                <div class="col-md-3">
                    <label for="StartDate" class="control-label">Fecha de Inicio</label>
                    <input asp-for="StartDate" id="editStartDate" class="form-control" />
                    <span asp-validation-for="StartDate" class="text-danger"></span>
                </div>

                <div class="col-md-3">
                    <label for="DueDate" class="control-label">Fecha de Finalización</label>
                    <input asp-for="DueDate" id="editDueDate" class="form-control" />
                    <span asp-validation-for="DueDate" class="text-danger"></span>
                </div>

                <div class="col-md-3">
                    <label for="TaskStatus" class="control-label">Estatus de la Tarea</label>
                    <select class="form-control" id="editStatusTask" required>
                        <option>Select Status</option>
                        @foreach (var status in ViewBag.Status)
                        {
                            <option value="@status.TaskStatusId">@status.TaskStatus</option>
                        }
                    </select>
                </div>
                <div class="modal-footer">
                    <input type="submit" value="Guardar" class="btn btn-success" />
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Cancelar</button>
                </div>
            </form>
        </div>

        </main>


        <script src="~/vendor/jquery/jquery.min.js"></script>
        <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
        <script>

        var fecha = new Date();

        document.getElementById("taskDate").value = fecha.getFullYear() + "-" + fecha.getMonth() + "-" + fecha.getDay() + " " + fecha.getHours() + ":" + fecha.getMinutes() + ":" + fecha.getSeconds();
        console.log(document.getElementById("taskDate").value);

        document.addEventListener("DOMContentLoaded", function (event) {
            loadUsers();
        });

        // Función para cargar tareas mediante AJAX
        function loadUsers() {
            $.ajax({
                url: '/TaskEmployee/GetTasksByName',
                type: 'GET',
                success: function (response) {
                    console.log(response); // Log the response to check for errors
                    if (response.status) {
                        var tasks = response.value;
                        var taskListHtml = '';
                        tasks.forEach(function (task) {
                            taskListHtml += '<tr>' +
                                '<td>' + task.TaskId + '</td>' +
                                '<td>' + task.NameTask + '</td>' +
                                '<td>' + task.StartDate + '</td>' +
                                '<td>' + task.DueDate + '</td>' +
                                '<td>' + task.UserDescription + '</td>' +
                                '<td>' + task.StatusDescription + '</td>' +
                                '<td>' +
                                '<button class="btn btn-sm btn-warning btn-custom btn-edit" data-taskId="' + task.taskId + '">Editar</button>' +
                                '<button class="btn btn-sm btn-danger btn-custom btn-delete" data-taskId="' + task.taskId + '">Eliminar</button>' +
                                '</td>' +
                                '</tr>';
                        });
                        $('#taskList tbody').html(taskListHtml); // Inserta las filas de usuarios en la tabla
                    } else {
                        $('#taskList').html('<div class="alert alert-danger">' + response.message + '</div>');
                    }
                },
                error: function (xhr, status, error) {
                    console.error(xhr.responseText);
                }
            });
        }

        function getTaskById(taskId) {
            $.ajax({
                url: '/TaskEmployee/GetTaskById?id=' + taskId,
                type: 'GET',
                success: function (response) {
                    if (response.status) {
                        var user = response.value;
                        $('#editTaskId').val(task.TaskId);
                        $('#editNameTask').val(task.NameTask);
                        $('#editDueDate').val(task.DueDate);
                        $('#editTaskStatus').val(task.TaskStatus);
                        $('#editTaskModal').modal('show');
                    } else {
                        alert('Error: ' + response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error(xhr.responseText);
                }
            });
        }

        // Evento para buscar en la tabla
        $('#searchInput').on('keyup', function () {
            var value = $(this).val().toLowerCase();
            $('#taskList tbody tr').filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
            });
        });

        // Al hacer clic en el botón de editar usuario en la tabla
        $('#taskList').on('click', '.btn-edit', function () {
            var taskId = $(this).data('taskId');
            getTaskById(taskId);
        });

        </script>

    </body>
</html>